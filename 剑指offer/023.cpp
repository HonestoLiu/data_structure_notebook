/*
输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。
假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对应的一个弹出序列，
但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）
*/

#include <iostream>
#include <vector>
#include <stack>
using namespace std;

class Solution {
public:
    bool IsPopOrder(vector<int> pushV,vector<int> popV) {
        if(pushV.size()==0)
        	return false;
        stack<int> res;
        for(int i=0,j=0;i<pushV.size();){
        	res.push(pushV[i++]);
        	//调换下面两个判断条件，在牛客网上会报数组越界错误 
        	while(j<popV.size() && popV[j]==res.top()){	
        		j++;
        		res.pop();
			}
		}
		return res.empty();
    }
};

int main(){
	int a[]={1,2,3,4,5};
//	int b[]={4,5,3,2,1};
//	int b[]={4,5,3,1,2};
	int b[]={1,2,3,4,5};
	vector<int> A(a,a+5),B(b,b+5);
	Solution S;
	cout<<S.IsPopOrder(A,B)<<endl;
	return 0;
}
